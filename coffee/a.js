// Generated by CoffeeScript 1.11.1
(function() {
  var resizePages;

  resizePages = function(target, animate) {
    var header, headerSpacer, height, hh, logoHeight, smallScreen;
    if (animate == null) {
      animate = true;
    }
    logger.log("[FRESH] Resize pages");
    smallScreen = DeviceHelper.isSmallScreen;
    header = $('#header-container');
    headerSpacer = $('#header-spacer');
    if (navAnimation()) {
      hh = header.height() - 0;
      headerSpacer.show().css('height', hh);
      logoHeight = $('#header-container .logo').height();
      $('a.section-anchor').css('top', -hh + logoHeight + 20);
      $('a.section-anchor').first().css('top', -hh);

      /*
      if spacer.length == 0
        spacer = $('<div class="spacer"></div>').prependTo( $('li.slide .container').first() )
      hh = header.height() - 20
       */
    } else {
      headerSpacer.hide();
    }
    height = $(window).height();
    logger.log("[FRESH]: Resizing sections");
    return $('.s-title-section, li.slide:first-child .s-cta-section, li.slide:first-child .s-slider-section').each(function(i, el) {
      var c, inlinePaddingBottom, inlinePaddingTop, origPaddingBottom, origPaddingTop, sectionHeight, t;
      t = $(this);
      c = t.find('.container').first();
      if (t.hasClass('no-resize')) {
        this.style.paddingTop = '';
        return this.style.paddingBottom = '';
      } else {
        inlinePaddingTop = this.style.paddingTop;
        inlinePaddingBottom = this.style.paddingBottom;
        this.style.paddingTop = '';
        this.style.paddingBottom = '';
        origPaddingTop = Math.min(100, parseInt(t.css('padding-top'), 10));
        origPaddingBottom = Math.min(100, parseInt(t.css('padding-bottom'), 10));
        this.style.paddingTop = inlinePaddingTop;
        this.style.paddingBottom = inlinePaddingBottom;
        sectionHeight = height;
        if (i === 0 && t.closest('li.slide').is(':first-child')) {
          if (smallScreen()) {
            sectionHeight -= header.outerHeight();
          } else if (header.is(':visible')) {
            sectionHeight -= header.height();
          }
        } else {
          if (header.is(':visible')) {
            sectionHeight -= header.height() - getLogoHeight();
          }
        }
        return window.setTimeout(function() {
          var current, currentHeight, currentSlideHeight, newStyles, pad, pbottom, ptop;
          if (t.hasClass('no-resize')) {
            return;
          }
          if ($(el).is('.s-slider-section')) {
            current = $(el).find('.iosslider').data('current');
            currentSlideHeight = $(el).find('.iosslider').find('.inner').get(current).outerHeight();
            if (currentSlideHeight < sectionHeight) {
              $(el).find('.iosslider').height(sectionHeight).css('min-height', sectionHeight + "px");
            }
            return;
          }
          currentHeight = t.outerHeight();
          if (Math.abs(currentHeight - sectionHeight) < 64 && DeviceHelper.isSmallScreen()) {
            return;
          }
          pad = (sectionHeight - c.outerHeight(false)) * 0.5;
          ptop = Math.max(Math.min(450, Math.floor(pad)), origPaddingTop);
          pbottom = Math.max(Math.min(450, Math.ceil(pad)), origPaddingBottom);
          newStyles = {
            'padding-top': ptop,
            'padding-bottom': pbottom
          };
          if (animate) {
            return t.stop().animate(newStyles, 100);
          } else {
            return t.css(newStyles);
          }
        });
      }
    });
  };

}).call(this);
